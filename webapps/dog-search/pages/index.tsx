import Head from 'next/head'
import { useState } from 'react'
import Button from '../components/Button'

import styles from '../styles/Home.module.css'
import { gql, useQuery } from '@apollo/client'
// import { initializeApollo, addApolloState } from '../lib/apollo-client'

const animalsGql = gql`
  query AnimalsQuery($location: String, $page: Int) {
    animals(location: $location, page: $page, limit: 20) {
      animals {
        name
        photos {
          full
        }
        url
      }
    }
  }
`

export default function Home() {
  const [location, setLocation] = useState('')
  const [locationInput, setLocationInput] = useState('')
  const [currentPage, setCurrentPage] = useState(1)
  const { data, fetchMore } = useQuery(animalsGql, {
    variables: {
      location,
      page: 1,
    },
    skip: !location,
  })
  return (
    <div className={styles.container}>
      <Head>
        <title>Dog Search App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header
        style={{
          display: 'flex',
          width: '100%',
          alignItems: 'center',
          justifyContent: 'center',
        }}
      >
        Powered by the &nbsp;{' '}
        <a
          href="https://www.petfinder.com/developers/v2/docs/"
          style={{ color: 'blue' }}
        >
          Petfinder API
        </a>
      </header>
      {location && (
        <Button
          onClick={() => {
            fetchMore({
              variables: {
                page: currentPage + 1,
              },
            })
            setCurrentPage(currentPage + 1)
          }}
        >
          Fetch more results
        </Button>
      )}
      <main className={`${styles.main}`}>
        {!location && (
          <div className={styles.card}>
            <h2 style={{ textAlign: 'center', color: '#F0F0F0' }}>
              Enter your zip code
            </h2>
            <div style={{ textAlign: 'center' }}>
              <input
                value={locationInput}
                onChange={(event) => {
                  if (!event.target.value.match(/\d*/)) return
                  setLocationInput(
                    event.target.value.match(/\d{0,5}/)[0].substring(0, 5)
                  )
                }}
                onKeyDown={(e) => {
                  if (e.key === 'Enter' && locationInput.length === 5) {
                    setLocation(locationInput)
                  }
                }}
                style={{ lineHeight: '30px', fontSize: '24px', width: '100%' }}
              />
            </div>
            <div className="@px-1 @my-4">
              <Button
                className="@w-full"
                disabled={locationInput.length !== 5}
                onClick={() => {
                  setLocation(locationInput)
                }}
              >
                Fetch
              </Button>
            </div>
          </div>
        )}
        {location && data && data.animals.animals && (
          <div
            style={{
              display: 'grid',
              width: '100vw',
              gridTemplateColumns: '25% 25% 25% 25%',
              gridTemplateRows: '',
            }}
          >
            {data.animals.animals
              .filter((animal) => animal.photos[0])
              .map((animal, i) => {
                return (
                  <a key={i} style={{ margin: 25 }} href={animal.url}>
                    <div
                      style={{ backgroundColor: '#4040F0', borderRadius: 4 }}
                    >
                      <div
                        style={{
                          textAlign: 'center',
                          fontSize: 24,
                          fontWeight: 500,
                        }}
                        className="@text-sky-200"
                      >
                        {animal.name}
                      </div>
                      <img
                        style={{
                          width: '100%',
                          height: '300px',
                          aspectRatio: '1',
                          borderRadius: 4,
                          padding: 10,
                        }}
                        alt={`Image of ${animal.name}`}
                        src={animal.photos[0].full}
                      />
                    </div>
                  </a>
                )
              })}
          </div>
        )}
      </main>

      <footer className={styles.footer}></footer>
    </div>
  )
}

// export async function getServerSideProps() {
//   // const apolloClient = initializeApollo()

//   // await apolloClient.query({
//   //   query: gql`
//   //   query AnimalsQuery {
//   //     animals(location: "80210") {
//   //       animals {
//   //         name
//   //         photos {
//   //           full
//   //         }
//   //       }
//   //     }
//   //   }`,
//   // })

//   // return addApolloState(apolloClient, {
//   //   props: {},
//   // })
// }
