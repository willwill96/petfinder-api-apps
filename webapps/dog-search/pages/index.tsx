import Head from 'next/head'
import { useState } from 'react'
import { gql, useQuery } from '@apollo/client'
import AnimalResults from '../components/Animals/AnimalResults'
import EntryInterview from '../components/EntryInterview'
// import { initializeApollo, addApolloState } from '../lib/apollo-client'

const animalsGql = gql`
  query AnimalsQuery($location: String, $page: Int) {
    animals(location: $location, page: $page, limit: 20) {
      animals {
        name
        photos {
          full
        }
        url
      }
    }
  }
`

export default function Home() {
  const [location, setLocation] = useState('')
  const [currentPage, setCurrentPage] = useState(1)
  const { data, fetchMore } = useQuery(animalsGql, {
    variables: {
      location,
      page: 1,
    },
    skip: !location,
  })
  // const mockAnimals = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].reduce((acc, curr) => {
  //   acc.push({
  //     photos: [
  //       {
  //         full: 'https://post.medicalnewstoday.com/wp-content/uploads/sites/3/2020/02/322868_1100-800x825.jpg',
  //       },
  //     ],
  //     name: `Dog ${curr}`,
  //     url: 'https://post.medicalnewstoday.com/wp-content/uploads/sites/3/2020/02/322868_1100-800x825.jpg',
  //   })
  //   return acc
  // }, [])
  return (
    <div className="@h-full">
      <Head>
        <title>Dog Search App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* {location && (
        <Button
          onClick={() => {
            fetchMore({
              variables: {
                page: currentPage + 1,
              },
            })
            setCurrentPage(currentPage + 1)
          }}
        >
          Fetch more results
        </Button>
      )} */}
      <main className="@h-full @flex @justify-center">
        {!location && (
          <EntryInterview onSubmit={({ location }) => setLocation(location)} />
        )}
        {/* {location && <AnimalResults animals={mockAnimals} />} */}
        {location && data && data.animals.animals && (
          <AnimalResults animals={data.animals.animals} />
        )}
      </main>
    </div>
  )
}

// export async function getServerSideProps() {
//   // const apolloClient = initializeApollo()

//   // await apolloClient.query({
//   //   query: gql`
//   //   query AnimalsQuery {
//   //     animals(location: "80210") {
//   //       animals {
//   //         name
//   //         photos {
//   //           full
//   //         }
//   //       }
//   //     }
//   //   }`,
//   // })

//   // return addApolloState(apolloClient, {
//   //   props: {},
//   // })
// }
